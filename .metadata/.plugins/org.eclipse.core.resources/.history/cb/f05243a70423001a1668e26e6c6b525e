package com.simen.sorm.utils;
/**
 * 封装了生成Java文件（源代码）常用的操作
 * @author xinmianhuang
 *
 */

import com.simen.sorm.bean.BeanSrcCode;
import com.simen.sorm.bean.ColumnInfo;
import com.simen.sorm.core.MySqlTypeConvertor;
import com.simen.sorm.core.TypeConvertor;

public class JavaFileUtils {
	/**
	 * 根据字段信息生成Javabean属性信息。如：varchar username==>private Stringusername;以及相应的get set方法源码
	 * @param column sql字段信息
	 * @param convertor 类型转化器
	 * @return Javabean中关于该sql字段的源码
	 */
	public static BeanSrcCode makeBean(ColumnInfo column, TypeConvertor convertor) {
		BeanSrcCode bean = new BeanSrcCode();
		String beanFieldType = convertor.databaseType2Java(column.getDataType());
		String columnName = column.getName();
		
		//generate source code for fields
		StringBuilder fieldBuilder = new StringBuilder();
		fieldBuilder.append("\tprivate ").append(beanFieldType).append(" ").append(columnName).append(";\n");
		bean.setBeanFields(fieldBuilder.toString());
		
		//generate source code for getter
		//public Type getField(){return field;}
		StringBuilder getterBuilder = new StringBuilder();
		getterBuilder.append("\tpublic "+beanFieldType+" ");
		getterBuilder.append("get"+StringUtils.capFirstLetter(columnName));
		getterBuilder.append("(){ \n");
		getterBuilder.append("\treturn "+columnName+";\n");
		getterBuilder.append("\t}\n");
		bean.setGetters(getterBuilder.toString());
		
		//generate source code for setter
		//public void setField(Type field){this.field = field;}
		StringBuilder setterBuilder = new StringBuilder();
		setterBuilder.append("\tpubilc void ");
		setterBuilder.append("set"+StringUtils.capFirstLetter(columnName));
		setterBuilder.append("("+beanFieldType+" "+columnName+"){\n");
		setterBuilder.append("\tthis."+columnName+" = "+columnName+";\n");
		setterBuilder.append("\t}\n");
		bean.setSetters(setterBuilder.toString());
		
		return bean;
	}
	
	public static void main(String[] args) {
		ColumnInfo column = new ColumnInfo("empname", "varchar", 0);
		TypeConvertor convertor = new MySqlTypeConvertor();
		BeanSrcCode src = makeBean(column, convertor);
		System.out.println(src);
	}
}
